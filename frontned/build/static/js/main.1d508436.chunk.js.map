{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","Pages/Navbar.js","Pages/ArticlePage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","children","useState","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","a","title","status","duration","isClosable","position","config","headers","axios","post","data","setItem","stringify","description","response","message","spacing","id","isRequired","type","placeholder","onChange","e","target","size","width","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","maxW","centerContent","d","justifyContent","bg","w","m","borderRadius","borderWidth","fontSize","fontFamily","isFitted","mb","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","useDisclosure","isOpen","onOpen","onClose","base","icon","View","isCentered","flexDir","alignItems","boxSize","src","alt","md","ScrollableChat","map","display","label","placement","hasArrow","mt","mr","cursor","backgroundColor","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","px","py","Close","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","query","Authorization","token","get","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","ml","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","selectedFile","setSelectedFile","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","sessionStorage","window","location","pathname","reload","handleFileUpload","formData","io","on","newMessageReceived","chat","includes","overflowY","ArrowBack","isGroupChat","toUpperCase","alignSelf","margin","className","onKeyDown","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","htmlFor","Attachment","as","Chatbox","ChatLoading","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","Add","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","backgroundcolor","fontWeight","justifyContents","gap","count","effect","Effect","SCALE","Bell","notif","n","Button","ChevronDown","removeItem","borderBottomWidth","Chatpage","Navbar","scrollToSavedArticles","borderBottom","to","marginRight","textDecoration","border","Pagination","articlesPerPage","totalArticles","paginate","currentPage","pageNumbers","Math","ceil","listStyle","number","ArticlePage","articles","setArticles","saved","setSaved","setCurrentPage","setToken","savedArticlesRef","useRef","t","fetchArticles","error","fetchSavedArticles","saveArticle","article","indexOfLastArticle","indexOfFirstArticle","currentArticles","currentSavedArticles","pageNumber","current","scrollIntoView","behavior","index","flex","boxSizing","overflow","boxShadow","urlToImage","objectFit","href","rel","ref","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d508436.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n   \n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/ArticlePage\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/ArticlePage\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"dnozafb8u\");\n      fetch(\"https://api.cloudinary.com/v1_1/dnozafb8u/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Rohit's Chat App\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon, AttachmentIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"https://pilot-chat-app.onrender.com\"; // \r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n        title: \"Success!\",\r\n          description: \"Message Sent\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        sessionStorage.setItem('currentPath', window.location.pathname);\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n    formData.append(\"chatId\", selectedChat._id);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/message/file\", formData, config);\r\n\r\n      setSelectedFile(null);\r\n      socket.emit(\"new message\", data);\r\n      setMessages([...messages, data]);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Failed to upload the file\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message received\", (newMessageReceived) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageReceived.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageReceived)) {\r\n          setNotification([newMessageReceived, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageReceived]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      d=\"flex\"\r\n      flexDir=\"column\"\r\n      justifyContent=\"flex-end\"\r\n      p={3}\r\n      bg=\"#f7e7ce\"\r\n      w=\"100%\"\r\n      h=\"100%\"\r\n      borderRadius=\"lg\"\r\n      overflowY=\"hidden\"\r\n    >\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(null)}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          {loading ? (\r\n            <Spinner\r\n              size=\"xl\"\r\n              w={20}\r\n              h={20}\r\n              alignSelf=\"center\"\r\n              margin=\"auto\"\r\n            />\r\n          ) : (\r\n            <div className=\"messages\">\r\n              <ScrollableChat messages={messages} />\r\n            </div>\r\n          )}\r\n\r\n          <FormControl\r\n            onKeyDown={sendMessage}\r\n            id=\"first-name\"\r\n            isRequired\r\n            mt={3}\r\n          >\r\n            {istyping ? (\r\n              <div>\r\n                <Lottie\r\n                  options={defaultOptions}\r\n                  // height={50}\r\n                  width={70}\r\n                  style={{ marginBottom: 15, marginLeft: 0 }}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <Box d=\"flex\" alignItems=\"center\">\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n                mr={2}\r\n              />\r\n              <Input\r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n                display=\"none\"\r\n                id=\"file-upload\"\r\n              />\r\n              <label htmlFor=\"file-upload\">\r\n                <IconButton icon={<AttachmentIcon />} as=\"span\" />\r\n              </label>\r\n              <IconButton\r\n                icon={<ArrowBackIcon />}\r\n                onClick={handleFileUpload}\r\n                ml={2}\r\n              />\r\n            </Box>\r\n          </FormControl>\r\n        </>\r\n      ) : (\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\" bg=\"#f7e7ce\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\" >\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction }) => {\n  const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"#f7e7ce\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  \n  const handlearticle=()=>{\n    history.push('/ArticlePage')\n  }\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n    \n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"#cdb891\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n        backgroundcolor=\"black\"\n        \n      >\n        \n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\" >\n          <p style={{fontWeight:'bolder'}}>Rohit's Chat App</p>\n        </Text>\n        <div style={{display:\"flex\",justifyContents:\"space-around\",gap:\"20px\"}}>\n          <button onClick={handlearticle}>\n            Browse Articles\n          </button>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n      \n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox  from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","// components/Navbar.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = ({ scrollToSavedArticles }) => {\n    return (\n        <nav style={{ padding: '10px 20px', borderBottom: '1px solid #ddd',backgroundColor:'#cdb891',width:'110%'}}>\n            <div style={{display:'flex',justifyContent:'space-around',width:'90%',alignItems:'center',}}>\n                \n            <p style={{fontSize:'20px',fontWeight:'bold'}}>News Article App</p>\n            <Link to=\"/ArticlePage\" style={{ marginRight: '20px', textDecoration: 'none', color: '#007bff' }}><u>Browse Articles</u></Link>\n            <button\n                onClick={scrollToSavedArticles}\n                style={{\n                    background: 'none',\n                    border: 'none',\n                    color: '#007bff',\n                    cursor: 'pointer',\n                    textDecoration: 'underline'\n                }}\n            >\n                Saved Articles\n            </button>\n            <Link to=\"/chats\" style={{ marginRight: '20px', textDecoration: 'none', color: '#007bff', }}><u>Chat With People</u></Link>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","// pages/ArticlePage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../Pages/Navbar';\n\nconst ArticlePage = () => {\n    const [articles, setArticles] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [saved, setSaved] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [articlesPerPage] = useState(9);\n    let [token, setToken] = useState('');\n    const savedArticlesRef = useRef(null);\n\n    useEffect(() => {\n        let t = JSON.parse(localStorage.getItem('userInfo'));\n        setToken(t.token);\n    }, []);\n\n    const fetchArticles = async () => {\n        try {\n            const response = await axios.get(\n                `https://newsapi.org/v2/top-headlines?country=in&apiKey=e10d0a25c5a045b98b10a23f1224057d`\n            );\n            // too many requests in your api key so using mine\n            setArticles(response.data.articles);\n            setLoading(false);\n        } catch (error) {\n            console.error(\"Error fetching articles:\", error);\n        }\n    };\n\n    const fetchSavedArticles = async () => {\n        try {\n            const response = await axios.get('/api/saved', {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            setSaved(response.data);\n        } catch (error) {\n            console.error(\"Error fetching saved articles:\", error);\n        }\n    };\n\n    const saveArticle = async (article) => {\n        try {\n            await axios.post('/api/saved/save', article, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            fetchSavedArticles(); // Update the saved articles list\n        } catch (error) {\n            console.error(\"Error saving article:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchArticles();\n    }, []);\n\n    useEffect(() => {\n        fetchSavedArticles();\n    }, [token]);\n\n  \n    const indexOfLastArticle = currentPage * articlesPerPage;\n    const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\n    const currentArticles = articles.slice(indexOfFirstArticle, indexOfLastArticle);\n    const currentSavedArticles = saved.slice(indexOfFirstArticle, indexOfLastArticle);\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    const scrollToSavedArticles = () => {\n        savedArticlesRef.current.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    return (\n        <div>\n            <Navbar scrollToSavedArticles={scrollToSavedArticles} />\n            <div style={{ padding: '20px' }}>\n                <div style={{display:'flex',justifyContent:'center',fontSize:'30px',marginBottom:'15px',fontWeight:'bold'}}>\n                <h1>News Articles</h1>\n                </div>\n               \n                {loading ? (\n                    <p>Loading...</p>\n                ) : (\n                    <div style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        gap: '20px',\n                        justifyContent: saved.length === 1 ? 'center' : 'space-between',\n                    maxWidth: '1200px',\n                    margin: '0 auto'\n                    }}>\n                        {currentArticles.map((article, index) => (\n                            <div key={index} style={{\n                                flex: '1 1 calc(33.333% - 20px)',\n                                boxSizing: 'border-box',\n                                border: '1px solid #ddd',\n                                borderRadius: '8px',\n                                overflow: 'hidden',\n                                boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n                                marginBottom: '20px',\n                                 maxWidth: '300px'\n                            }}>\n                                <img\n                                    src={article.urlToImage || 'https://via.placeholder.com/300?text=No+Image'}\n                                    alt={article.title}\n                                    style={{\n                                        width: '100%',\n                                        height: '200px',\n                                        objectFit: 'cover'\n                                    }}\n                                />\n                                <div style={{ padding: '10px' }}>\n                                    <h2 style={{ fontSize: '16px', margin: '0 0 10px' }}>{article.title}</h2>\n                                    <p style={{ fontSize: '14px', color: '#555' }}>{article.description || 'No description available'}</p>\n                                    <div style={{display:'flex',gap:'20px',alignItems:'center',marginTop:'10px'}}>\n                                    <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#007bff', textDecoration: 'none' }}>Read more</a>\n                                    <button onClick={() => saveArticle(article)} style={{color:'green',fontWeight:'bolder'}}>Save Article</button>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n                <Pagination\n                    articlesPerPage={articlesPerPage}\n                    totalArticles={articles.length}\n                    paginate={paginate}\n                    currentPage={currentPage}\n                />\n                <div style={{display:'flex',justifyContent:'center',fontSize:'25px',fontWeight:'bold',margin:'20px'}}>\n                <h2 ref={savedArticlesRef}>Saved Articles</h2>\n                </div>\n                \n                <div style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: '20px',\n                    justifyContent: saved.length === 1 ? 'center' : 'space-between',\n                    maxWidth: '1200px',\n                    margin: '0 auto'\n                }}>\n                    {currentSavedArticles.map((article, index) => (\n                        <div key={index} style={{\n                            flex: '1 1 calc(33.333% - 20px)',\n                            boxSizing: 'border-box',\n                            border: '1px solid #ddd',\n                            borderRadius: '8px',\n                            overflow: 'hidden',\n                            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n                            marginBottom: '20px',\n                            maxWidth: '300px'\n                        }}>\n                            <img\n                                src={article.urlToImage || 'https://via.placeholder.com/300?text=No+Image'}\n                                alt={article.title}\n                                style={{\n                                    width: '100%',\n                                    height: '200px',\n                                    objectFit: 'cover'\n                                }}\n                            />\n                            <div style={{ padding: '10px' }}>\n                                <h2 style={{ fontSize: '16px', margin: '0 0 10px' }}>{article.title}</h2>\n                                <p style={{ fontSize: '14px', color: '#555' }}>{article.description || 'No description available'}</p>\n                                <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#007bff', textDecoration: 'none' }}>Read more</a>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <Pagination\n                    articlesPerPage={articlesPerPage}\n                    totalArticles={saved.length}\n                    paginate={paginate}\n                    currentPage={currentPage}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst Pagination = ({ articlesPerPage, totalArticles, paginate, currentPage }) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalArticles / articlesPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <nav>\n            <ul style={{ display: 'flex', listStyle: 'none', justifyContent: 'center', padding: '0' }}>\n                {pageNumbers.map(number => (\n                    <li key={number} style={{ margin: '0 10px' }}>\n                        <button\n                            onClick={() => paginate(number)}\n                            style={{\n                                padding: '10px 20px',\n                                border: '1px solid #007bff',\n                                borderRadius: '5px',\n                                backgroundColor: number === currentPage ? '#007bff' : '#fff',\n                                color: number === currentPage ? '#fff' : '#007bff',\n                                cursor: 'pointer'\n                            }}\n                        >\n                            {number}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nexport default ArticlePage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\nimport ArticlePage from \"./Pages/ArticlePage\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n      <Route path =\"/ArticlePage\" component={ArticlePage}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}